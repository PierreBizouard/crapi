import win32security as w32sec
import win32service as w32svc
import win32api as w32api

        #self.sa = w32sec.SECURITY_ATTRIBUTES()
        #self.sa.bInheritHandle = True
        
        rc = None
        while rc != win32event.WAIT_OBJECT_0:
            servicemanager.LogInfoMsg(
                "OS-AUtoMaton VM Core Service: Probing for active IPs..."
            )
            self.__active_tcp_ports = sorted([
                ip.laddr for ip in psutil.net_connections('tcp4')
                #if ip_address(ip.laddr[0]) > IPv4Address('10.0.0.0')
                #and ip_address(ip.laddr[0]) < IPv4Address('10.255.255.255')
            ], key=itemgetter(1))

            #with io.open(
            #    'C:\\Users\\Kounavi\\Desktop\\svc.txt', buffering=1, mode='w+'
            #) as f:
            #    f.write('\n'.join('%s %s' % t for t in self.__local_ip))
            #    f.flush()
            #    os.fsync(f)
            servicemanager.LogInfoMsg(
                "OS-AUtoMaton VM Core Service: Key-Value DB is up-to-date!"
            )
            
            rc = win32event.WaitForSingleObject(self.hWaitStop, 60000)

def hRebootFunc(svc_name, *args):
    scm.LogInfoMsg(svc_name + ": System reboot detected!")
    return True

            # In main:
            win32serviceutil.HandleCommandLine(Daemon)
            w32api.SetConsoleCtrlHandler(hRebootFunc, True)